name: 'Build Docker Image'

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        type: string
        default: 'develop'
  schedule:
    - cron: '0 21 * * 5'
  pull_request:
    paths:
      - ".github/workflows/build.yml"
      - "root/**"
      - "Dockerfile"
  push:
    branches:
      - nightly
    paths:
      - ".github/workflows/build.yml"
      - "root/**"
      - "Dockerfile"

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ inputs.branch || 'develop' }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build Docker Image (${{ github.event.pull_request.number || inputs.branch || 'develop' }})"
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.head.repo.fork }}
    env:
      CI: 1
      FORCE_COLOR: 0
      NO_COLOR: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_VERSION: 6.0.423
      BUILD_SOURCEBRANCHNAME: develop
      BRANCH_TO_BUILD: ${{ inputs.branch || 'develop' }}
      RAW_BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Generate metadata
        id: gen_meta
        run: |
          echo "tag_branch=${{ env.BRANCH_TO_BUILD }}" | tr '[:upper:]' '[:lower:]' >> $GITHUB_OUTPUT
          echo "BRANCH=${RAW_BRANCH_NAME//\//-}" >> "$GITHUB_ENV"

      - name: Retrieving external version
        id: ext_release
        run: |
          EXT_RELEASE=$(curl -sL "https://radarr.servarr.com/v1/update/nightly/changes?runtime=netcore&os=linuxmusl" | jq -r '.[0].version')
          if [ -z "${EXT_RELEASE}" ] || [ "${EXT_RELEASE}" == "null" ]; then
            echo "**** Can't retrieve external version, exiting ****"
            echo "Can't retrieve external version, exiting" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          EXT_RELEASE=$(echo ${EXT_RELEASE} | sed 's/[~,%@+;:/]//g')
          echo "**** External version: ${EXT_RELEASE} ****"
          echo "External version: ${EXT_RELEASE}" >> $GITHUB_STEP_SUMMARY
          echo "RADARRVERSION=${EXT_RELEASE}" >> $GITHUB_ENV
          if [[ "${EXT_RELEASE}" =~ ^([0-9]+\.[0-9]+\.[0-9]+)\.([0-9]+)$ ]]; then
            SEMVER="${BASH_REMATCH[1]}"
            echo "**** Semantic version: ${SEMVER} ****"
            echo "Semantic version: ${SEMVER}" >> $GITHUB_STEP_SUMMARY
            echo "SEMVER=${SEMVER}" >> $GITHUB_ENV
          else
            echo "**** Can't parse semantic version, exiting ****"
            exit 2
          fi

      - uses: actions/checkout@v4.1.7

      - uses: actions/checkout@v4.1.7
        with:
          repository: Radarr/Radarr
          ref: ${{ env.BRANCH_TO_BUILD }}
          path: build

      - uses: actions/setup-node@v4.0.2
        with:
          node-version: '20.x'

      - uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Create temporary global.json
        run: |
          echo '{"sdk":{"version": "${{ env.DOTNET_VERSION }}"}}' > ./build/global.json

      - working-directory: build
        run: dotnet --info

      - name: Build Backend
        working-directory: build
        run: |
          ./build.sh --backend -f net6.0 -r linux-musl-x64

      - name: Build Frontend
        working-directory: build
        run: |
          ./build.sh --frontend --lint

      - name: Build Package
        working-directory: build
        run: |
          ./build.sh --packages -f net6.0 -r linux-musl-x64
          rm -rf _artifacts/linux-musl-x64/net6.0/Radarr/Radarr.Update
          find . -name "Radarr" -exec chmod a+x {} \;
          find . -name "ffprobe" -exec chmod a+x {} \;

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/radarr
          labels: |
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
          tags: |
            type=raw,value=${{ env.BRANCH }}-${{ env.RADARRVERSION }},enable=${{ github.event_name != 'pull_request' && (github.ref_name != 'master' && github.ref_name != 'main') && env.BRANCH_TO_BUILD == 'develop' }}
            type=raw,value=${{ env.RADARRVERSION }},enable=${{ github.event_name != 'pull_request' && (github.ref_name == 'master' || github.ref_name == 'main') && env.BRANCH_TO_BUILD == 'develop' }}
            type=raw,value=${{ env.BRANCH }}-${{ env.SEMVER }},enable=${{ github.event_name != 'pull_request' && (github.ref_name != 'master' && github.ref_name != 'main') && env.BRANCH_TO_BUILD == 'develop' }}
            type=raw,value=${{ env.SEMVER }},enable=${{ github.event_name != 'pull_request' && (github.ref_name == 'master' || github.ref_name == 'main') && env.BRANCH_TO_BUILD == 'develop' }}
            type=raw,value=${{ env.BRANCH }},enable=${{ github.event_name != 'pull_request' && env.BRANCH_TO_BUILD == 'develop' }}
            type=raw,value=${{ steps.gen_meta.outputs.tag_branch }}-${{ env.RADARRVERSION }},enable=${{ github.event_name != 'pull_request' && env.BRANCH_TO_BUILD != 'develop' }}
            type=raw,value=branch-${{ steps.gen_meta.outputs.tag_branch }},enable=${{ github.event_name != 'pull_request' && env.BRANCH_TO_BUILD != 'develop' }}
            type=ref,event=pr

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.4.0
        with:
          platforms: linux/amd64

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6.3.0
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            VERSION=${{ env.RADARRVERSION }}-${{ env.BRANCH }}-r${{ github.run_number }}
